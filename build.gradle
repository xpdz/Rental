buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
        classpath 'org.springframework:springloaded:1.2.0.RELEASE'
    }
}

apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'spring-boot'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
}

bootRepackage {
    mainClass = 'rental.Main'
}

war {
    baseName = 'rental'
}

configurations {
    providedRuntime
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

dependencies {
    runtime("mysql:mysql-connector-java:5.1.33")

    compile 'commons-io:commons-io:2.4'
    compile 'org.json:json:20141113'

    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.thymeleaf:thymeleaf-spring4")
    compile("org.thymeleaf.extras:thymeleaf-extras-springsecurity3")
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
//    compile("org.flywaydb:flyway-core")

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
